openapi: 3.0.3
info:
  title: NVA Preferences API
  version: 1.0.0
paths:
  /{cristinId+}:
    parameters:
      - in: path
        name: cristinId+
        description: 'UTF-8 Encoded cristin identifier of nva user'
        schema:
          type: string
        required: true
    get:
      description: 'Fetches preferences for person'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FetchPersonPreferencesHandler.Arn}:live/invocations
        responses: { }
        httpMethod: POST
        type: AWS_PROXY
      responses:
        '200':
          description: "Successfully fetched"
        '404':
          description: "Person preferences not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      description: 'Creates/Updates preferences for person'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      security:
        - CognitoUserPool: [
          'https://api.nva.unit.no/scopes/backend',
          'https://api.nva.unit.no/scopes/frontend',
          'aws.cognito.signin.user.admin',
        ]
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpsertPersonPreferencesHandler.Arn}:live/invocations
        responses: { }
        httpMethod: POST
        type: AWS_PROXY
      responses:
        '200':
          description: "Successfully created/updated"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"

        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  schemas:
    Preferences:
      type: object
      description: Object containing preferences
      properties:
        promotedPublications:
          type: array
          description: Array containing publication identifiers
          items:
            type: string
    Problem:
      type: object
      description: NVA error reporting object
      required:
        - title
        - detail
        - status
      properties:
        title:
          type: string
          description: Human-readable description of the error status
        detail:
          type: string
          description: A more detailed error message describing the error and potential mitigations
        status:
          type: integer
          description: The HTTP status code associated with the problem
        requestId:
          type: string
          description: Identifier of the request causing the problem
        instance:
          type: string
          description: The requested path associated with the error
        type:
          type: string
          description: A URI describing the error and mitigations, in generic cases, this is about:blank
  securitySchemes:
    CognitoUserPool:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - Ref: CognitoAuthorizerArn
